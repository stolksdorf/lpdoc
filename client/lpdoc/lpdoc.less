@import "animations.less";

@font-face {
	font-family: eightBit;
	src: url('/assets/lpdoc/8bit.ttf');
}


@topSectionHeight : 300px;

@markerIndex : 900;
@topSectionIndex : 910;
@timelineIndex : 890;
@playerIndex : 1000;
@itemBarIndex : 1000;
@backgroundIndex : -1;

body{
	margin : 0;
	overflow:auto;
	background-color: black;

	font-family: eightBit;

	position: relative;

	height: 100%;




	.PACHOW{
		position: fixed;
		z-index : 9001;
		display: none;
		.transform(translateX(-50%) translateY(-50%));
		&.show{
			display: block;
		}
		pointer-events:none;
		.unselectable();

	}
}

.fade-enter {
	opacity: 0.01;
	transition: opacity .25s ease-in;
}

.fade-enter.fade-enter-active {
	opacity: 1;
}

.fade-leave {
	opacity: 1;
	transition: opacity .25s ease-in;
}

.fade-leave.fade-leave-active {
	opacity: 0.01;
}









//Mixins
.unselectable(){
	-moz-user-select: none;
	-khtml-user-select: none;
	-webkit-user-select: none;
	-o-user-select: none;
}

.vendor(@property, @value) {
	-webkit-@{property}: @value;
	 -khtml-@{property}: @value;
	   -moz-@{property}: @value;
			@{property}: @value;
}

.gradientVertical(@startColor: blue, @endColor: red, @stop1 : 0%, @stop2 : 100%) {
	background-color: @startColor;
	background: -webkit-linear-gradient(@startColor @stop1, @endColor @stop2);
	background: -moz-linear-gradient(@startColor @stop1, @endColor @stop2);
	background: -ms-linear-gradient(@startColor @stop1, @endColor @stop2);
	background: -o-linear-gradient(@startColor @stop1, @endColor @stop2);
	background: linear-gradient(@startColor @stop1, @endColor @stop2);
}


//Animation Maker
@defaultDuration : 0.25s;
@defaultEasing   : ease;
.createFrames(@name, @from, @to){
	@frames: {
		from { @from(); }
		to { @to(); }
	};
	@-webkit-keyframes @name {@frames();}
	   @-moz-keyframes @name {@frames();}
		@-ms-keyframes @name {@frames();}
		 @-o-keyframes @name {@frames();}
			@keyframes @name {@frames();}
}

.createAnimation(@name, @duration : @defaultDuration, @easing : @defaultEasing){
	.vendor(animation-name, @name);
	.vendor(animation-duration, @duration);
	.vendor(animation-timing-function, @easing);
}

.fadeOut(@duration : @defaultDuration, @easing : @defaultEasing){
	.createAnimation(fadeOut; @duration; @easing);
	.createFrames(fadeOut,
		{ opacity : 1; },
		{ opacity : 0; }
	);
}
//Animates all properties on an element
.animateAll(@duration : @defaultDuration, @easing : @defaultEasing){
	-webkit-transition: all @duration @easing;
	   -moz-transition: all @duration @easing;
		 -o-transition: all @duration @easing;
			transition: all @duration @easing;
}
.animate(@prop, @duration : @defaultDuration, @easing : @defaultEasing){
	-webkit-transition: @prop @duration @easing;
	   -moz-transition: @prop @duration @easing;
		 -o-transition: @prop @duration @easing;
			transition: @prop @duration @easing;
}
